give @s minecraft:written_book{title: "Vim Manual", author: "GNU", resolved: 1b, pages: ["[{\"text\":\"vim man page\\n\\nBack to Contents\\n\\nVIM(1)                   General Commands Manual                   VIM(1)\\n\\nNAME\\nvim - Vi IMproved, a programmer's text editor\\n\\n\"}]","[{\"text\":\"SYNOPSIS\\nvim [options] [file ..]\\nvim [options] -\\nvim [options] -t tag\\nvim [options] -q [errorfile]\\n\\nex gex\\nview\\ngvim gview vimx evim eview\\nrvim rview rgvim \"}]","[{\"text\":\"rgview\\n\\nDESCRIPTION\\nVim  is a text editor that is upwards compatible to Vi.  It can be\\nused to edit all kinds of plain text.  It is especially useful for\\nediting programs.\\n\\nThere  are a lot \"}]","[{\"text\":\"of enhancements above Vi: multi level undo, multi\\nwindows and buffers, syntax highlighting,  command  line  editing,\\nfilename  completion,  on-line  help, visual selection, etc..  See\\n\\\":help vi_diff.txt\\\" for a summary of the differences  \"}]","[{\"text\":\"between  Vim\\nand Vi.\\n\\nWhile  running  Vim a lot of help can be obtained from the on-line\\nhelp system, with the \\\":help\\\" command.  See the ON-LINE HELP  sec‐\\ntion below.\\n\\nMost often Vim is \"}]","[{\"text\":\"started to edit a single file with the command\\n\\nvim file\\n\\nMore generally Vim is started with:\\n\\nvim [options] [filelist]\\n\\nIf  the  filelist  is missing, the \"}]","[{\"text\":\"editor will start with an empty\\nbuffer.  Otherwise exactly one out of the following  four  may  be\\nused to choose one or more files to be edited.\\n\\nfile ..     A  list  of filenames.  The first one will be the cur‐\\n\"}]","[{\"text\":\"rent file and read into the buffer.  The  cursor  will\\nbe  positioned  on  the first line of the buffer.  You\\ncan get to the other files with the  \\\":next\\\"  command.\\nTo  edit  a  file that starts with a dash, precede the\\nfilelist with \\\"--\\\".\\n\"}]","[{\"text\":\"-           The file to edit is read  from  stdin.   Commands  are\\nread from stderr, which should be a TTY.\\n\\n-t {tag}    The  file  to  edit  and  the  initial cursor position\\ndepends on a \\\"tag\\\", a sort of goto  \"}]","[{\"text\":\"label.   {tag}  is\\nlooked  up  in  the  tags  file,  the  associated file\\nbecomes the current file and the associated command is\\nexecuted.   Mostly  this  is  used  for C programs, in\\nwhich case {tag} could be a function name.  The effect\\nis  that the file \"}]","[{\"text\":\"containing that function becomes the\\ncurrent file and the cursor is positioned on the start\\nof the function.  See \\\":help tag-commands\\\".\\n\\n-q [errorfile]\\nStart  in quickFix mode.  The file [errorfile] is read\\nand the first \"}]","[{\"text\":\"error is displayed.  If  [errorfile]  is\\nomitted, the filename is obtained from the 'errorfile'\\noption  (defaults  to  \\\"AztecC.Err\\\"  for  the   Amiga,\\n\\\"errors.err\\\" on other systems).  Further errors can be\\njumped to with the \\\":cn\\\" command.  \"}]","[{\"text\":\"See  \\\":help  quick‐\\nfix\\\".\\n\\nVim behaves differently, depending on the name of the command (the\\nexecutable may still be the same file).\\n\\nvim       The \\\"normal\\\" way, \"}]","[{\"text\":\"everything is default.\\n\\nex        Start in Ex mode.  Go to Normal mode with the \\\":vi\\\" com‐\\nmand.  Can also be done with the \\\"-e\\\" argument.\\n\\nview      Start  in  read-only  mode.   You will be \"}]","[{\"text\":\"protected from\\nwriting the files.  Can also be done with the \\\"-R\\\" argu‐\\nment.\\n\\ngvim gview\\nThe GUI version.  Starts a new window.\\n\\ngex       Starts  a  new  gvim window in Ex mode. Can \"}]","[{\"text\":\"also be done\\nwith the \\\"-e\\\" argument to gvim\\n\\nvimx      Starts gvim in \\\"Vi\\\" mode  similar  to  \\\"vim\\\",  but  with\\nadditional features like xterm clipboard support\\n\\nevim eview\\nThe GUI version in \"}]","[{\"text\":\"easy mode.  Starts a new window.  Can\\nalso be done with the \\\"-y\\\" argument.\\n\\nrvim rview rgvim rgview\\nLike the above, but with restrictions.  It will  not  be\\npossible  to  start shell commands, or suspend Vim.  Can\\nalso be done with \"}]","[{\"text\":\"the \\\"-Z\\\" argument.\\n\\nOPTIONS\\nThe options may be given in any order, before or after  filenames.\\nOptions without an argument can be combined after a single dash.\\n\\n+[num]      For  the  first  file the \"}]","[{\"text\":\"cursor will be positioned on\\nline \\\"num\\\".  If \\\"num\\\" is missing, the cursor  will  be\\npositioned on the last line.\\n\\n+/{pat}     For  the  first  file the cursor will be positioned in\\nthe line with the  first  occurrence  \"}]","[{\"text\":\"of  {pat}.   See\\n\\\":help  search-pattern\\\"  for the available search pat‐\\nterns.\\n\\n+{command}\\n\\n-c {command}\\n{command} will be executed after the  first  file  has\\nbeen read.  {command} is interpreted \"}]","[{\"text\":\"as an Ex command.\\nIf the {command} contains spaces it must  be  enclosed\\nin  double  quotes  (this depends on the shell that is\\nused).  Example: vim \\\"+set si\\\" main.c\\nNote: You can use up to 10 \\\"+\\\" or \\\"-c\\\" commands.\\n\\n-S {file}   {file} \"}]","[{\"text\":\"will be sourced after the first file  has  been\\nread.   This  is  equivalent  to  -c  \\\"source {file}\\\".\\n{file} cannot start with '-'.  If  {file}  is  omitted\\n\\\"Session.vim\\\"  is used (only works when -S is the last\\nargument).\\n\\n\"}]","[{\"text\":\"--cmd {command}\\nLike using \\\"-c\\\", but  the  command  is  executed  just\\nbefore  processing  any vimrc file.  You can use up to\\n10 of these commands,  independently  from  \\\"-c\\\"  com‐\\nmands.\\n\\n-A          If Vim has been compiled \"}]","[{\"text\":\"with ARABIC support for edit‐\\ning right-to-left oriented files and  Arabic  keyboard\\nmapping,  this  option starts Vim in Arabic mode, i.e.\\n'arabic' is set.  Otherwise an error message is  given\\nand Vim aborts.\\n\\n-b          \"}]","[{\"text\":\"Binary  mode.  A few options will be set that makes it\\npossible to edit a binary or executable file.\\n\\n-C          Compatible.  Set the 'compatible' option.   This  will\\nmake  Vim  behave mostly like Vi, even though a .vimrc\\n\"}]","[{\"text\":\"file exists.\\n\\n-d          Start in diff mode.  There should  be  two,  three  or\\nfour file name arguments.  Vim will open all the files\\nand show differences between them.  Works  like  vimd‐\\niff(1).\\n\\n\"}]","[{\"text\":\"-d {device} Open  {device}  for  use  as  a terminal.  Only on the\\nAmiga.  Example: \\\"-d con:20/30/600/150\\\".\\n\\n-D          Debugging.  Go to debugging mode  when  executing  the\\nfirst command from a script.\\n\"}]","[{\"text\":\"-e          Start  Vim  in  Ex  mode, just like the executable was\\ncalled \\\"ex\\\".\\n\\n-E          Start Vim in improved Ex  mode,  just  like  the  exe‐\\ncutable was called \\\"exim\\\".\\n\\n-f          \"}]","[{\"text\":\"Foreground.   For  the  GUI version, Vim will not fork\\nand detach from the shell it was started in.   On  the\\nAmiga,  Vim  is  not  restarted  to open a new window.\\nThis option should be used when Vim is executed  by  a\\nprogram  that will wait for the edit \"}]","[{\"text\":\"session to finish\\n(e.g. mail).  On the Amiga the \\\":sh\\\" and \\\":!\\\" commands\\nwill not work.\\n\\n--nofork    Foreground.   For  the  GUI version, Vim will not fork\\nand detach from the shell it was started in.\\n\\n\"}]","[{\"text\":\"-F          If Vim has been compiled with FKMAP support for  edit‐\\ning  right-to-left  oriented  files and Farsi keyboard\\nmapping, this option starts Vim in  Farsi  mode,  i.e.\\n'fkmap'  and  'rightleft' are set.  Otherwise an error\\nmessage is given \"}]","[{\"text\":\"and Vim aborts.\\n\\n-g          If Vim has been compiled with GUI support, this option\\nenables  the  GUI.  If no GUI support was compiled in,\\nan error message is given and Vim aborts.\\n\\n-h          Give a \"}]","[{\"text\":\"bit of help about the  command  line  arguments\\nand options.  After this Vim exits.\\n\\n-H          If  Vim  has  been compiled with RIGHTLEFT support for\\nediting right-to-left oriented files and  Hebrew  key‐\\nboard  mapping, \"}]","[{\"text\":\"this option starts Vim in Hebrew mode,\\ni.e. 'hkmap' and 'rightleft' are  set.   Otherwise  an\\nerror message is given and Vim aborts.\\n\\n-i {viminfo}\\nSpecifies  the filename to use when reading or writing\\n\"}]","[{\"text\":\"the viminfo file, instead of the default \\\"~/.viminfo\\\".\\nThis  can also be used to skip the use of the .viminfo\\nfile, by giving the name \\\"NONE\\\".\\n\\n-L          Same as -r.\\n\\n-l          Lisp mode.  Sets the \"}]","[{\"text\":\"'lisp'  and  'showmatch'  options\\non.\\n\\n-m          Modifying  files  is  disabled.   Resets  the  'write'\\noption.  You can still modify the buffer, but  writing\\na file is not possible.\\n\\n\"}]","[{\"text\":\"-M          Modifications   not  allowed.   The  'modifiable'  and\\n'write' options will be unset, so that changes are not\\nallowed and files can not be written.  Note that these\\noptions can be set to enable making modifications.\\n\\n\"}]","[{\"text\":\"-N          No-compatible mode.  Resets the  'compatible'  option.\\nThis  will  make  Vim behave a bit better, but less Vi\\ncompatible, even though a .vimrc file does not exist.\\n\\n-n          No swap file will be used.   Recovery  \"}]","[{\"text\":\"after  a  crash\\nwill  be impossible.  Handy if you want to edit a file\\non a very slow medium (e.g. floppy).  Can also be done\\nwith \\\":set uc=0\\\".  Can be undone with \\\":set uc=200\\\".\\n\\n-nb         Become  an  editor  server for NetBeans.  \"}]","[{\"text\":\"See the docs\\nfor details.\\n\\n-o[N]       Open N windows stacked.  When N is omitted,  open  one\\nwindow for each file.\\n\\n-O[N]       Open  N windows side by side.  When N is omitted, open\\n\"}]","[{\"text\":\"one window for each file.\\n\\n-p[N]       Open N tab pages.  When N is  omitted,  open  one  tab\\npage for each file.\\n\\n-R          Read-only  mode.   The  'readonly' option will be set.\\n\"}]","[{\"text\":\"You can still edit the buffer, but will  be  prevented\\nfrom  accidentally overwriting a file.  If you do want\\nto overwrite a file, add an exclamation mark to the Ex\\ncommand,  as in \\\":w!\\\".  The -R option also implies the\\n-n option (see above).  The \"}]","[{\"text\":\"'readonly' option  can  be\\nreset with \\\":set noro\\\".  See \\\":help 'readonly'\\\".\\n\\n-r          List swap files, with information about using them for\\nrecovery.\\n\\n-r {file}   Recovery mode.  The swap \"}]","[{\"text\":\"file is  used  to  recover  a\\ncrashed editing session.  The swap file is a file with\\nthe  same  filename  as  the  text  file  with  \\\".swp\\\"\\nappended.  See \\\":help recovery\\\".\\n\\n-s          Silent  mode.   Only  when started as \\\"Ex\\\" \"}]","[{\"text\":\"or when the\\n\\\"-e\\\" option was given before the \\\"-s\\\" option.\\n\\n-s {scriptin}\\nThe script file {scriptin} is read.  The characters in\\nthe  file  are  interpreted  as if you had typed them.\\nThe same  can  be  done  with  the  \"}]","[{\"text\":\"command  \\\":source!\\n{scriptin}\\\".  If the end of the file is reached before\\nthe editor exits, further characters are read from the\\nkeyboard.\\n\\n-T {terminal}\\nTells  Vim  the  name  of  the terminal you are using.\\nOnly required when \"}]","[{\"text\":\"the  automatic  way  doesn't  work.\\nShould be a terminal known to Vim (builtin) or defined\\nin the termcap or terminfo file.\\n\\n-u {vimrc}  Use the commands in the file {vimrc}  for  initializa‐\\ntions.   All  the  other  \"}]","[{\"text\":\"initializations are skipped.\\nUse this to edit a special kind of files.  It can also\\nbe used to skip all initializations by giving the name\\n\\\"NONE\\\".  See \\\":help  initialization\\\"  within  vim  for\\nmore details.\\n\\n-U {gvimrc} Use \"}]","[{\"text\":\"the commands in the file {gvimrc} for GUI initial‐\\nizations.   All  the  other  GUI  initializations  are\\nskipped.  It can also be used to skip all GUI initial‐\\nizations  by  giving  the  name  \\\"NONE\\\".   See  \\\":help\\ngui-init\\\" within vim for more details.\\n\"}]","[{\"text\":\"-V[N]       Verbose.   Give messages about which files are sourced\\nand for reading  and  writing  a  viminfo  file.   The\\noptional number N is the value for 'verbose'.  Default\\nis 10.\\n\\n-v          Start Vim in Vi mode, \"}]","[{\"text\":\"just  like  the  executable  was\\ncalled \\\"vi\\\".  This only has effect when the executable\\nis called \\\"ex\\\".\\n\\n-w {scriptout}\\nAll the characters that you type are recorded  in  the\\nfile  {scriptout}, until you exit Vim.  This is useful\\n\"}]","[{\"text\":\"if you want to create a script file to  be  used  with\\n\\\"vim  -s\\\"  or  \\\":source!\\\".   If  the  {scriptout} file\\nexists, characters are appended.\\n\\n-W {scriptout}\\nLike -w, but an existing file is overwritten.\\n\\n\"}]","[{\"text\":\"-x          Use encryption when writing files.  Will prompt for  a\\ncrypt key.\\n\\n-X          Don't  connect to the X server.  Shortens startup time\\nin a terminal, but the window title and clipboard will\\nnot be used.\\n\"}]","[{\"text\":\"-y          Start  Vim  in easy mode, just like the executable was\\ncalled \\\"evim\\\" or \\\"eview\\\".  Makes  Vim  behave  like  a\\nclick-and-type editor.\\n\\n-Z          Restricted  mode.   Works  like  the executable starts\\n\"}]","[{\"text\":\"with \\\"r\\\".\\n\\n--          Denotes the end of the options.  Arguments after  this\\nwill  be  handled as a file name.  This can be used to\\nedit a filename that starts with a '-'.\\n\\n--echo-wid  GTK \"}]","[{\"text\":\"GUI only: Echo the Window ID on stdout.\\n\\n--help      Give a help message and exit, just like \\\"-h\\\".\\n\\n--literal   Take file name  arguments  literally,  do  not  expand\\nwildcards.  This \"}]","[{\"text\":\"has no effect on Unix where the shell\\nexpands wildcards.\\n\\n--noplugin  Skip loading plugins.  Implied by -u NONE.\\n\\n--remote    Connect to a Vim server and make  it  edit  the  files\\ngiven  in  the rest of the \"}]","[{\"text\":\"arguments.  If no server is\\nfound a warning is given and the files are  edited  in\\nthe current Vim.\\n\\n--remote-expr {expr}\\nConnect  to  a  Vim  server, evaluate {expr} in it and\\nprint the result on stdout.\\n\"}]","[{\"text\":\"--remote-send {keys}\\nConnect to a Vim server and send {keys} to it.\\n\\n--remote-silent\\nAs --remote, but without the warning when no server is\\nfound.\\n\\n--remote-wait\\nAs  --remote,  \"}]","[{\"text\":\"but  Vim  does not exit until the files\\nhave been edited.\\n\\n--remote-wait-silent\\nAs --remote-wait, but  without  the  warning  when  no\\nserver is found.\\n\\n--remote-tab[-wait][-silent]\\n\"}]","[{\"text\":\"As --remote but use tab page per file\\n\\n--role      Set a unique role to identify the main window\\n\\n--serverlist\\nList the names of all Vim servers that can be found.\\n\\n--servername {name}\\n\"}]","[{\"text\":\"Use  {name}  as the server name.  Used for the current\\nVim, unless used with a --remote argument,  then  it's\\nthe name of the server to connect to.\\n\\n--socketid {id}\\nGTK GUI only: Use the GtkPlug mechanism to run gvim in\\nanother window.\\n\"}]","[{\"text\":\"--version   Print version information and exit.\\n\\nON-LINE HELP\\nType \\\":help\\\" in Vim to get started.  Type \\\":help subject\\\"  to  get\\nhelp  on  a specific subject.  For example: \\\":help ZZ\\\" to get help\\nfor the \\\"ZZ\\\" \"}]","[{\"text\":\"command.  Use <Tab> and CTRL-D to  complete  subjects\\n(\\\":help  cmdline-completion\\\").   Tags are present to jump from one\\nplace to another (sort of hypertext links, see \\\":help\\\").  All doc‐\\numentation  files  can  be  viewed in this way, for \"}]","[{\"text\":\"example \\\":help\\nsyntax.txt\\\".\\n\\nFILES\\n/usr/share/vim/vim82/doc/*.txt\\nThe   Vim   documentation   files.    Use    \\\":help\\ndoc-file-list\\\" to get the complete list.\\n\\n\"}]","[{\"text\":\"/usr/share/vim/vim82/doc/tags\\nThe  tags  file used for finding information in the\\ndocumentation files.\\n\\n/usr/share/vim/vim82/syntax/syntax.vim\\nSystem wide syntax initializations.\\n\\n\"}]","[{\"text\":\"/usr/share/vim/vim82/syntax/*.vim\\nSyntax files for various languages.\\n\\n/etc/vimrc     System wide Vim initializations.\\n\\n~/.vimrc       Your personal Vim initializations.\\n\\n/etc/gvimrc    \"}]","[{\"text\":\"System wide gvim initializations.\\n\\n~/.gvimrc      Your personal gvim initializations.\\n\\n/usr/share/vim/vim82/optwin.vim\\nScript used for the \\\":options\\\" command, a nice  way\\nto view and set options.\\n\"}]","[{\"text\":\"/usr/share/vim/vim82/menu.vim\\nSystem wide menu initializations for gvim.\\n\\n/usr/share/vim/vim82/bugreport.vim\\nScript to generate a bug report.  See \\\":help bugs\\\".\\n\\n/usr/share/vim/vim82/filetype.vim\\n\"}]","[{\"text\":\"Script  to  detect  the type of a file by its name.\\nSee \\\":help 'filetype'\\\".\\n\\n/usr/share/vim/vim82/scripts.vim\\nScript to detect the type of a  file  by  its  con‐\\ntents.  See \\\":help 'filetype'\\\".\\n\\n\"}]","[{\"text\":\"/usr/share/vim/vim82/print/*.ps\\nFiles used for PostScript printing.\\n\\nFor recent info read the VIM home page:\\n<URL:http://www.vim.org/>\\n\\nSEE ALSO\\nvimtutor(1)\\n\\n\"}]","[{\"text\":\"AUTHOR\\nMost  of  Vim  was made by Bram Moolenaar, with a lot of help from\\nothers.  See \\\":help credits\\\" in Vim.\\nVim is based on Stevie, worked on by: Tim Thompson,  Tony  Andrews\\nand  G.R. (Fred) Walter.  Although hardly any of the \"}]","[{\"text\":\"original code\\nremains.\\n\\nBUGS\\nProbably.  See \\\":help todo\\\" for a list of known problems.\\n\\nNote that a number of things that may be regarded as bugs by some,\\nare  in  fact \"}]","[{\"text\":\"caused by a too-faithful reproduction of Vi's behav‐\\niour.  And if you think other things are bugs \\\"because Vi does  it\\ndifferently\\\",  you  should  take  a closer look at the vi_diff.txt\\nfile (or type :help vi_diff.txt when in Vim).  Also have \"}]","[{\"text\":\"a look at\\nthe 'compatible' and 'cpoptions' options.\\n\\n2006 Apr 11                         VIM(1)\\n\"}]"]} 1
